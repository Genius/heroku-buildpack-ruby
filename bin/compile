#!/usr/bin/env bash
# This script compiles Ruby with a specific OpenSSL version directly on the Heroku stack.

set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BIN_DIR=$(cd "$(dirname "$0")" || exit; pwd) # absolute path

# shellcheck source=bin/support/bash_functions.sh
source "$BIN_DIR/support/bash_functions.sh"

checks::ensure_supported_stack "${STACK:?Required env var STACK is not set}"

# --- Install build-time dependencies ---
echo "-----> Installing build dependencies"
apt-get update && apt-get install -y --no-install-recommends \
  build-essential \
  curl \
  libgmp-dev \
  zlib1g-dev

# --- Define installation paths ---
ruby_install_dir="$BUILD_DIR/vendor/ruby-2.6.9"
openssl_install_dir="$BUILD_DIR/vendor/openssl-1.1.1u"

# Create installation directories
mkdir -p "$ruby_install_dir" "$openssl_install_dir"

# --- Compile and install OpenSSL 1.1.1u ---
echo "-----> Compiling and installing OpenSSL 1.1.1u"
curl -L -o /tmp/openssl-1.1.1u.tar.gz https://www.openssl.org/source/openssl-1.1.1u.tar.gz
tar -xzf /tmp/openssl-1.1.1u.tar.gz -C /tmp

pushd /tmp/openssl-1.1.1u
  ./config --prefix="$openssl_install_dir" shared
  make
  make install
popd

# --- Compile and install Ruby 2.6.9 ---
echo "-----> Compiling and installing Ruby 2.6.9"
curl -L -o /tmp/ruby-2.6.9.tar.gz https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.9.tar.gz
tar -xzf /tmp/ruby-2.6.9.tar.gz -C /tmp

pushd /tmp/ruby-2.6.9
  ./configure --prefix="$ruby_install_dir" --with-openssl-dir="$openssl_install_dir"
  make
  make install
popd

# --- Clean up source code ---
echo "-----> Cleaning up temporary files"
rm -rf /tmp/openssl-1.1.1u /tmp/openssl-1.1.1u.tar.gz
rm -rf /tmp/ruby-2.6.9 /tmp/ruby-2.6.9.tar.gz

# --- Set environment variables for the build ---
echo "-----> Setting up environment variables"
export PATH="$ruby_install_dir/bin:$PATH"
export LD_LIBRARY_PATH="$ruby_install_dir/lib:$openssl_install_dir/lib:${LD_LIBRARY_PATH:-}"

# The rest of your script
# You will no longer need the 'download_ruby' function.
# The `ruby` command will now be found in $PATH.
"$ruby_install_dir"/bin/ruby "$BIN_DIR/support/ruby_compile" "$@"